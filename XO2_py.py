{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMjj+LJLHZw0KD90wBiWf8e"
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "d2A2yZEuT2pB"
      },
      "outputs": [],
      "source": [
        "import random\n",
        "#from IPython.display import clear_output\n",
        "\n",
        "a=[1,2,3,4,5,6,7,8,9] #locations\n",
        "matrix = [['1','2','3'], ['4','5','6'], ['7','8','9']] #board\n",
        "a1=[0,0,0,1,1,1,2,2,2] #row index\n",
        "a2=[0,1,2,0,1,2,0,1,2] #column index\n",
        "b=[1,2,3] # win condition\n",
        "c=[4,5,6] # win condition\n",
        "d=[7,8,9] # win condition\n",
        "e=[1,4,7] # win condition\n",
        "f=[2,5,8]  # win condition\n",
        "g=[3,6,9] # win condition\n",
        "h=[1,5,9] # win condition\n",
        "f=[3,5,7] # win condition\n",
        "i=[3,5,7] # win condition\n",
        "\n",
        "for row in matrix:\n",
        "    print(row)  # Print each row\n",
        "\n",
        "xl=[] # x  List ofselections\n",
        "ol=[] # o List of selections\n",
        "\n",
        "while True :\n",
        "   # print('avialable locations = ' ,a)\n",
        "    x=int(input('please input x location from board    ')) # X location input selection\n",
        "    #clear_output() # clear screen\n",
        "    print('You selected      ',x)\n",
        "    if x in a :\n",
        "     # print(' len a = ',(len(a)))\n",
        "      #print(a1[x-1])\n",
        "      #print(a2[x-1])\n",
        "      matrix[a1[x-1]][a2[x-1]]='X'\n",
        "      for row in matrix:\n",
        "        print(row)\n",
        "      a.remove(x) # Removing last selection from the original selections\n",
        "      xl=xl+[x] # Update  List of selections X\n",
        "    #  print('xl=',xl) # Updated list of selections X\n",
        "      cx1= set(b).issubset(set(xl)) # check if x selections wins\n",
        "      cx2= set(c).issubset(set(xl)) # check if x selelctions wins\n",
        "      cx3= set(d).issubset(set(xl)) # check if x selelctions wins\n",
        "      cx4= set(e).issubset(set(xl)) # check if x selelctions wins\n",
        "      cx5= set(f).issubset(set(xl)) # check if x selelctions wins\n",
        "      cx6= set(g).issubset(set(xl)) # check if x selelctions wins\n",
        "      cx7= set(h).issubset(set(xl)) # check if x selelctions wins\n",
        "      cx8= set(i).issubset(set(xl)) # check if x selelctions wins\n",
        "      if (cx1 or cx2 or cx3 or cx4 or cx5 or cx6 or cx7 or cx8) == True :\n",
        "        print('X wins') # Win condition\n",
        "        break\n",
        "      elif len(a) == 0 :\n",
        "        print('no more locations')\n",
        "        break\n",
        "    else :\n",
        "      print(' not avialable select again')\n",
        "      continue\n",
        "    o=random.choice(a) # O selections from avialable locations\n",
        "    #clear_output()\n",
        "    print('Your opponent selected =    ',o)\n",
        "    if o in a:\n",
        "      #print(a1[o-1]) # raw index\n",
        "      #print(a2[o-1]) # column index\n",
        "      matrix[a1[o-1]][a2[o-1]]='O' # Update natrix\n",
        "      for row in matrix: # print updated matrix\n",
        "        print(row)\n",
        "      a.remove(o)\n",
        "      ol=ol+[o] # Update List of selections\n",
        "     # print('ol=',ol)   #Updated list of selections O\n",
        "      co1= set(b).issubset(set(ol)) # check if o selelctions wins\n",
        "      co2= set(c).issubset(set(ol)) # check if o selelctions wins\n",
        "      co3= set(d).issubset(set(ol)) # check if o selelctions wins\n",
        "      co4= set(e).issubset(set(ol)) # check if o selelctions wins\n",
        "      co5= set(f).issubset(set(ol)) # check if o selelctions wins\n",
        "      co6= set(g).issubset(set(ol)) # check if o selelctions wins\n",
        "      co7= set(h).issubset(set(ol)) # check if o selelctions wins\n",
        "      co8= set(i).issubset(set(ol)) # check if o selelctions wins\n",
        "      if (co1 or co2 or co3 or co4 or co5 or co6 or co7 or co8) == True :\n",
        "        print('O wins')\n",
        "        break\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n"
      ]
    }
  ]
}